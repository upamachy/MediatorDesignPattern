@page "/register"
@using DemoLibrary.Models
@using BlazorUI.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Register</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">Register</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @errorMessage
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success" role="alert">
                            @successMessage
                        </div>
                    }

                    <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" />

                        <div class="mb-3">
                            <label for="firstname" class="form-label">First Name:</label>
                            <InputText id="firstname" class="form-control" @bind-Value="registerModel.FirstName" />
                        </div>

                        <div class="mb-3">
                            <label for="lastname" class="form-label">Last Name:</label>
                            <InputText id="lastname" class="form-control" @bind-Value="registerModel.LastName" />
                        </div>

                        <div class="mb-3">
                            <label for="username" class="form-label">Username:</label>
                            <InputText id="username" class="form-control" @bind-Value="registerModel.UserName" />
                            <ValidationMessage For="@(() => registerModel.UserName)" />
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email:</label>
                            <InputText id="email" type="email" class="form-control" @bind-Value="registerModel.Email" />
                            <ValidationMessage For="@(() => registerModel.Email)" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password:</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
                            <ValidationMessage For="@(() => registerModel.Password)" />
                        </div>

                        <div class="mb-3">
                            <label for="confirmpassword" class="form-label">Confirm Password:</label>
                            <InputText id="confirmpassword" type="password" class="form-control" @bind-Value="registerModel.ConfirmPassword" />
                            <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span>Registering...</span>
                                }
                                else
                                {
                                    <span>Register</span>
                                }
                            </button>
                        </div>
                    </EditForm>

                    <div class="text-center mt-3">
                        <p>Already have an account? <a href="/login">Login here</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Register registerModel = new();
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private bool isLoading = false;

    private async Task HandleRegister()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;
            successMessage = string.Empty;

            var result = await AuthService.RegisterAsync(registerModel);

            if (result.Success)
            {
                successMessage = result.Message;
                await JSRuntime.InvokeVoidAsync("alert", "Registration successful! Please login.");
                Navigation.NavigateTo("/login");
            }
            else
            {
                errorMessage = result.Message;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}